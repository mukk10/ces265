/*
CES265, a multi-threaded HEVC encoder.
Copyright (C) 2013-2014, CES265 project.

This program is free software: you can redistribute it and/or modify
it under the terms of the GNU General Public License as published by
the Free Software Foundation, either version 3 of the License, or
(at your option) any later version.

This program is distributed in the hope that it will be useful,
but WITHOUT ANY WARRANTY; without even the implied warranty of
MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
GNU General Public License for more details.

You should have received a copy of the GNU General Public License
along with this program.  If not, see <http://www.gnu.org/licenses/>.
*/

/**
* @file InputParameters.h
* @author Muhammad Usman Karim Khan, Muhammad Shafique, Joerg Henkel (CES, KIT)
* @brief This file contains the class that handles input from the user
*/

#ifndef __INPUTPARAMETERS_H__
#define __INPUTPARAMETERS_H__

#include <TypeDefs.h>
#include <stdio.h>

/**
*	Input parameters from the user.
*	Currently, all the members are public.
*/
class InputParameters
{
public:
	// Video related
	i32 	NumRefFrame;										//!<	Number of reference frames to be used
	u32 	m_uiNumFrames;                						//!<	Number of frames to be encoded
	i32 	m_iFrameRate;										//!<	Frame rate of the input
	u32 	m_uiQP;                      						//!<	QP of first frame
	u32 	m_uiFrameWidth;                						//!<	Image uiWidth  (must be a multiple of 16 pels)
	u32 	m_uiFrameHeight;               						//!<	Image height (must be a multiple of 16 pels)
	u32		m_uiGopSize;										//!<	GOP size
	u32		m_uiTilesPerFrame;									//!<	Total Tiles in one frame
	u32		m_uiFrameWidthInTiles;								//!<	Total columns of the tiles in one frame
	u32		m_uiFrameHeightInTiles;								//!<	Total rows of tiles in one frame
				
	// Files and their names
	i8  	m_cInputYuvName[100];								//!<	Name of Input File
	i8		m_cRecYuvName[100];          						//!<	Reconstructed Pictures
	i8		OutputFile[100];									//!<	Output file name generated by the decoder
	FILE	*OutputFileptr;										//!<	Output file pointer

	// Threads
	u32		m_uiNumGOPThreads;									//!<	Total number of GOP threads
	u32		m_uiNumSliceThreads;								//!<	Total number of slice threads
	u32		m_uiNumTileThreads;									//!<	Total number of tile threads

	// Others
	bit		m_bVerbose;											//!< Display verbose output

	/**
	*	Constructor.
	*/
	InputParameters(){}
	~InputParameters(){}
};


#endif	//__INPUTPARAMETERS_H__